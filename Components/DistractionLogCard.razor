@using System.Globalization
<MudCard Square Style="width: 350px;">
    <MudCardHeader>
        <CardHeaderContent>
            <MudStack Row AlignItems="AlignItems.Center" Class="mb-2" Justify="Justify.SpaceBetween">
                <MudStack Justify="Justify.FlexStart" Row>
                    @foreach (var tag in @model.Tags)
                    {
                        <DistractionChipView Tag="tag" />
                    }
                </MudStack>
                <MudText Typo="Typo.h6">@GetJustTime(model.DateOfCreation)</MudText>
            </MudStack>
            <MudDivider />
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudText Align=Align.Center Typo="Typo.h5">@model.Notes</MudText>
    </MudCardContent>
    <MudCardActions Style="margin-left:auto;">
        @if (ShouldHaveDelete)
        {
            <MudButton Variant="Variant.Filled" Color="Color.Error" OnClick="@NotifyDelete">Delete</MudButton>
        }
    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public DistractionLogViewModel model { get; set; }

    [Parameter]
    public bool ShouldHaveDelete { get; set; }

    [Parameter]
    public EventCallback<long> OnDelete { get; set; }

    private string GetJustTime(DateTime fullDate)
    {
        TimeOnly timeFromDate = TimeOnly.FromDateTime(fullDate);
        string output = timeFromDate.ToShortTimeString();
        return output;
    }

    private async Task NotifyDelete()
    {
        await OnDelete.InvokeAsync(model.Id);
    }
}
