@using System.Globalization
<MudCard Square>
    <MudCardHeader>
        <CardHeaderContent>
            <MudStack Row>
                <MudText>@ChangeTimeFormat(model.TimeOfCreation)</MudText>
                @foreach (var tag in @model.Tags)
                {
                    <MudChip T="DistractionTagViewModel" Icon="@tag.Icon" Color="@tag.Color"></MudChip>
                }
            </MudStack>
        </CardHeaderContent>
    </MudCardHeader>
    <MudCardContent>
        <MudText Typo="Typo.h2">@model.Notes</MudText>
    </MudCardContent>
    <MudButton OnClick="@NotifyDelete">Delete</MudButton>
    <MudCardActions>

    </MudCardActions>
</MudCard>

@code {
    [Parameter]
    public DistractionLogViewModel model { get; set; }

    [Parameter]
    public EventCallback<long> OnDelete { get; set; }

    private string ChangeTimeFormat(TimeOnly timeNotFormatted)
    {
        string output = timeNotFormatted.ToString("T", CultureInfo.CurrentCulture);
        return output;
    }

    private async Task NotifyDelete()
    {
        await OnDelete.InvokeAsync(model.Id);
    }
}
