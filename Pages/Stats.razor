@page "/stats"
@inject DistractionLogRepository LogsRepo
@inject DistractionTagRepository TagsRepo
@inject DistractionLogMapper LogsMapper
@inject DistractionTagMapper TagsMapper

<MudText Align=Align.Center Typo="Typo.h5">Statistics</MudText>
<MudContainer MaxWidth="MaxWidth.Large" Class="py-5">

    <MudGrid>
        <MudItem xs="12">
            <MudPaper Class="pa-3">
                <MudSelect @bind-Value="_lastXDays"
                           Label="Logs from">
                    <MudSelectItem Value="3">Last 3 days</MudSelectItem>
                    <MudSelectItem Value="7">Last 7 days</MudSelectItem>
                    <MudSelectItem Value="30">Last 30 days</MudSelectItem>
                </MudSelect>
                <MudButton Style="margin-left:auto;" ButtonType="ButtonType.Button" Variant="Variant.Filled" Color="Color.Primary" OnClick="FilterLogsByDate">Filter logs</MudButton>
            </MudPaper>
        </MudItem>
        <MudItem xs="6">
            <MudPaper Height="250px">
                <DistractionMostFrequentTags Tags="_mostFrequentTags" />
                <MudDivider />
                <ul class="tags-count">
                    @foreach (TagWithFrequency tagFrequency in _tagsFrequency)
                    {
                        <li class="tag-with-count"><DistractionChipView Tag="@tagFrequency.TagViewModel" />: @tagFrequency.Frequency</li>
                    }
                </ul>
            </MudPaper>
        </MudItem>
        <MudItem xs="6">
            <MudPaper Height="250px">
                <DistractionLogsTimeComparison Models="_viewModels" DateRangeDays="_lastXDays" />
            </MudPaper>
        </MudItem>
        <MudItem xs="12">
            <MudPaper Height="400px">
                <DistractionLogsPerDay LogsPerDate="_logsByUniqueDates" />
            </MudPaper>
        </MudItem>
    </MudGrid>
</MudContainer>


@code {
    private List<DistractionLogViewModel> _viewModels = new List<DistractionLogViewModel>();
    private List<DistractionLogModel> _models = new List<DistractionLogModel>();
    private List<TagWithFrequency> _tagsFrequency = new();
    private List<DistractionTagViewModel> _mostFrequentTags = new();
    private Dictionary<DateTime, List<DistractionLogViewModel>> _logsByUniqueDates = new Dictionary<DateTime, List<DistractionLogViewModel>>();
    private int _lastXDays = 7;

    protected override async Task OnInitializedAsync()
    {
        _models = await LogsRepo.GetLogsFromLastXDays();
        _viewModels = await LogsMapper.MapToViewModelList(_models);
        _tagsFrequency = TagAnalyzer.GetDescFrequencyTags(_viewModels);
        _mostFrequentTags = TagAnalyzer.GetTopFrequentTags(_tagsFrequency);
        _logsByUniqueDates = LogAnalyzer.GetLogsByUniqueDates(_viewModels);
    }

    private async Task FilterLogsByDate()
    {
        _models = await LogsRepo.GetLogsFromLastXDays(_lastXDays);
        _viewModels = await LogsMapper.MapToViewModelList(_models);
        _tagsFrequency = TagAnalyzer.GetDescFrequencyTags(_viewModels);
        _mostFrequentTags = TagAnalyzer.GetTopFrequentTags(_tagsFrequency);
        _logsByUniqueDates = LogAnalyzer.GetLogsByUniqueDates(_viewModels);
    }
}
