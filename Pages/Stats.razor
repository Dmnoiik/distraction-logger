@page "/stats"
@inject DistractionLogRepository LogsRepo
@inject DistractionTagRepository TagsRepo
@inject DistractionLogMapper LogsMapper
@inject DistractionTagMapper TagsMapper

<MudText Typo="Typo.h1">Statistics</MudText>
<MudContainer MaxWidth="MaxWidth.Large">

    <MudGrid>
        <MudItem xs="6">
            <MudPaper>
                <DistractionMostFrequentTags Tags="_mostFrequentTags"/>
                <MudDivider />
                <ul class="tags-count">
                    @foreach (TagWithFrequency tagFrequency in _tagsFrequency)
                    {
                        <li class="tag-with-count"><DistractionChipView Tag="@tagFrequency.TagViewModel" />: @tagFrequency.Frequency</li>
                    }
                </ul>
            </MudPaper>
        </MudItem>
        <MudItem xs="6">
        </MudItem>
        <MudItem xs="6">
        </MudItem>
        <MudItem xs="6">
        </MudItem>
    </MudGrid>
</MudContainer>


@code {
    private List<DistractionLogViewModel> _viewModels = new List<DistractionLogViewModel>();
    private List<DistractionLogModel> _models = new List<DistractionLogModel>();
    private List<TagWithFrequency> _tagsFrequency = new();
    private List<DistractionTagViewModel> _mostFrequentTags = new();

    protected override async Task OnInitializedAsync()
    {
        _models = await LogsRepo.GetAllLogsAsync();
        _viewModels = await LogsMapper.MapToViewModelList(_models);
        _tagsFrequency = TagAnalyzer.GetDescFrequencyTags(_viewModels);
        _mostFrequentTags = TagAnalyzer.GetTopFrequentTags(_tagsFrequency);
    }
}
